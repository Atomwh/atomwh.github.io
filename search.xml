<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Gihub Pages + Hexo 个人博客快速搭建]]></title>
      <url>/2017/04/23/blog/</url>
      <content type="html"><![CDATA[<blockquote>
<p>手把手教学</p>
</blockquote>
<a id="more"></a>
<h1 id="Gihub-Pages-Hexo-个人博客搭建"><a href="#Gihub-Pages-Hexo-个人博客搭建" class="headerlink" title="Gihub Pages + Hexo 个人博客搭建"></a>Gihub Pages + Hexo 个人博客搭建</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>经过一个晚上的时间，查过各种网上的教程，终于将第一个个人博客搭建完成了。搭建完毕之后在主题选择部分也纠结了一会儿，选择困难症又犯了。最终选择了一款Material风格的主题，和Google的设计元素挺接近，很简洁。下面是搭建完成后的效果：<br><img src="http://oosvhkqtj.bkt.clouddn.com/20170423_01.png" alt=""><br>该主题的开源地址及安装教程在后文会有讲解。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>正文分为四个部分，分别为：环境配置、主题安装、Github Pages配置和部署以及博文的提交。</p>
<h3 id="1-环境配置"><a href="#1-环境配置" class="headerlink" title="1. 环境配置"></a>1. 环境配置</h3><p>这里介绍安装一些博客搭建必备的环境配置，包括个人电脑的端的安装及网站端(主要是GitHub)的设置。</p>
<h3 id="Node-js安装"><a href="#Node-js安装" class="headerlink" title="Node.js安装"></a>Node.js安装</h3><p>用于静态页面的生成，Github Pages上存储的就是其生成的静态页面，因此是必须安装的。可以到<a href="https://nodejs.org/en/download/" target="_blank" rel="external">Node.js</a>的官网选择自己电脑的版本下载。有时候官网加载很缓慢，也可移步到<a href="http://nodejs.cn/download/" target="_blank" rel="external">Node.js中文网站</a>下载，安装包是一样的。下载完毕之后一直下一步安装即可。</p>
<blockquote>
<p>安装时尽量按照其默认路径，防止之后的路径上出现问题。</p>
</blockquote>
<h3 id="GitHub客户端安装"><a href="#GitHub客户端安装" class="headerlink" title="GitHub客户端安装"></a>GitHub客户端安装</h3><p>将本地博客内容提交到GitHub Pages上去，类似于上传工具。官网下载地址点击<a href="https://desktop.github.com/" target="_blank" rel="external">这里</a>，如果页面加载过慢时，可以点击<a href="https://pan.baidu.com/s/1kU8jrr5" target="_blank" rel="external">这里</a>从百度网盘上进行下载。安装包很小，安装的过程中会从网络中实时下载，网速较慢的话可能会花一些时间。安装成功后弹出登录窗口，直接登录个人账号即可（登录过程可能比较慢）。</p>
<h3 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h3><p>前两步安装完毕之后，创建存放Hexo配置文件的文件夹，也是博客网站内容的地方。本次操作时是在F盘根目录创建文件夹blog。<br>在第二步安装GitHub客户端成功后，会在桌面生成两个图标，我们打开Git Shell，通过命令行进入刚才创建的目录：cd F:\blog（具体路径根据实际情况）</p>
<p>之后再命令行界面输入下面命令：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">1 npm install hexo-cli -g</div><div class="line">2 hexo init blog #该文件夹即是我们博客网站存放的地方</div><div class="line">3 cd blog</div><div class="line">4 npm install</div><div class="line">5 hexo g #或者hexo generate，用于静态页的生成</div><div class="line">6 hexo s #或者hexo sever，开启本地服务器用于本地博客的预览</div></pre></td></tr></table></figure></p>
<p>在上面代码第二行执行完毕之后的本地目录如下：<br><img src="http://oosvhkqtj.bkt.clouddn.com/20170423_02.png" alt=""></p>
<p>在第六行代码成功执行完毕之后，在浏览器中输入<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 即可打开默认的博客页面。<br>至此环境配置步骤部分完成。默认的主题并不是每个人都喜欢(比如我)，因此下一步进行博客主题的安装。</p>
<h3 id="2-主题安装"><a href="#2-主题安装" class="headerlink" title="2. 主题安装"></a>2. 主题安装</h3><p>Hexo提供了很多非常优秀的主题用于博客的搭建，各位可以根据个人的喜好进行选择，总有一款适合你。点击<a href="https://hexo.io/themes/" target="_blank" rel="external">这里</a>进入Hexo官网主题页，内含多种炫酷美腻的主题，而且都可以进行预览。如果页面加载过慢，点击<a href="https://hexo.io/zh-cn/" target="_blank" rel="external">这里</a>进入Hexo中文官方主页。如果觉得主题太多无法选择的话，这里推荐一个知乎上的问题<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="external">有哪些好看的Hexo主题？</a></p>
<p>本次以Material主题为示例，其Github地址点击<a href="https://github.com/viosey/hexo-theme-material" target="_blank" rel="external">这里</a>, <a href="https://blog.viosey.com" target="_blank" rel="external">预览网址</a>。</p>
<p>背景介绍完毕，接下来进行Hexo的安装。打开Git Shell，进入F:\blog\blog路径(路径请根据个人情况进行设置)，输入以下命令：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1 hexo clean</div><div class="line">2 git clone https://github.com/viosey/hexo-theme-material.git themes/material</div></pre></td></tr></table></figure></p>
<blockquote>
<p>git clone 后面的路径是该主题在Github上的地址，不过并不是浏览器上的地址。打开Github网页之后，可以看到一个<br>一个绿色的按钮\’clone or download\’，点击之后会出现一个URL，即是该地址。后面的\’themes\/material\’是在themes文件夹中建立material文件夹。Themes的路径见上张图像。</p>
</blockquote>
<p>克隆完毕之后会在themes文件夹中出现material文件夹：<br><img src="http://oosvhkqtj.bkt.clouddn.com/20170423_03.png" alt=""></p>
<p>之后修改Hexo安装目录（注意路径）下的_config.yml 配置文件中的theme属性（配置文件第67行），改为主题名：theme: material。之后将material文件中的_config.template.yml 重命名名为 _config.yml[注：此步在有些主题的安装过程中不一定都需要进行重命名，如果其文件夹中已经有_config.yml文件，该步骤不需要]。<br><img src="http://oosvhkqtj.bkt.clouddn.com/20170423_04.png" alt=""></p>
<p>配置文件修改完毕后进行主题的更新，即将我们选择的主题更新到博客上。在命令行中执行下面命令：[注：命令行窗口中的当前路径为F:\blog\blog]。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cd themes/material</div><div class="line">git pull</div><div class="line">hexo g # 生成</div><div class="line">hexo s # 启动本地web服务器</div></pre></td></tr></table></figure>
<p>执行完毕之后打开<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a><br>发现页面一直在加载，且命令行中有错误，经过分析发现是因为该主题需要设置配置文件中的语言选项，配置文件中默认为空，在这里设置为zh-CN。</p>
<blockquote>
<p>配置文件是themes\material文件夹中的_config.yml文件。</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># Site</div><div class="line">title: Hexo</div><div class="line">subtitle:</div><div class="line">description:</div><div class="line">author: John Doe</div><div class="line">language: zh-CN</div><div class="line">timezone:</div></pre></td></tr></table></figure>
<p>再次打开<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 即可看到更新后主题。<br><img src="http://oosvhkqtj.bkt.clouddn.com/20170423_05.png" alt=""></p>
<h3 id="3-Github-Pages配置部署"><a href="#3-Github-Pages配置部署" class="headerlink" title="3. Github Pages配置部署"></a>3. Github Pages配置部署</h3><blockquote>
<p>上一步我们已经可以在本地预览博客内容了，这一步要做的是将这个博客内容上传到Github Pages中以进行线上访问。</p>
</blockquote>
<p>GitHub Pages由于空间免费稳定，很时候个人博客的搭建。此步骤首先需要注册一个GitHub账号，直接在<a href="https://github.com/" target="_blank" rel="external">官网</a>注册登录即可，这里不再赘述。</p>
<p>登录Github账号，在上方导航栏选择New repository，建立新的仓库：<br><img src="http://oosvhkqtj.bkt.clouddn.com/20170423_06.png" alt=""></p>
<p><img src="http://oosvhkqtj.bkt.clouddn.com/20170423_07.png" alt=""></p>
<p>第一步方框中写入博客的访问地址，格式是:账户名.github.io。我这里由于已经创建过，所以显示已经存在。第三步为初始化一个Readme.md的文件，该选项可选。之后点击Create repository进行仓库的创建。<br><img src="http://oosvhkqtj.bkt.clouddn.com/20170423_08.png" alt=""></p>
<p>然后点击上方的Settings进行设置，进入设置页后滑到下面进行主题的选择。这个主题是GitHub Pages自带的主题，可以选择使用这个主题，本次教程使用上面我们已经在本地安装好的主题。<br><img src="http://oosvhkqtj.bkt.clouddn.com/20170423_09.png" alt=""></p>
<p><img src="http://oosvhkqtj.bkt.clouddn.com/20170423_10.png" alt=""></p>
<p>选好个人喜欢的主题之后点击Select theme即可。之后使用地址<a href="http://atomwh.github.io/" target="_blank" rel="external">http://atomwh.github.io/</a> 访问就可看到该主题的生效。</p>
<p>到这里GitHub Pages配置完毕，接下来我们将上个步骤中在本地Web环境下预览的博客(我们在本地安装的主题)部署到GitHub Pages上，部署成功之后可以通过<a href="http://atomwh.github.io/" target="_blank" rel="external">http://atomwh.github.io/</a> 直接访问查看。部署的过程主要是将 hexo -g 命令生成的静态网站提交(git commit)到GitHub上，之后通过地址来访问这个静态网站。</p>
<p>部署时使用hexo deploy命令。在部署之前首先对配置文件_config.yml 进行修改：</p>
<blockquote>
<p>这个配置文件和上面主题的配置文件名一样，但不是一个文件。主题中的配置文件位于主题文件夹中，本次是要对Hexo进行配置，其文件位置和themes文件夹在同一级，即F:\blog\blog\_config.yml</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: https://github.com/Atomwh/atomwh.github.io #我们刚开始创建的仓库地址，在浏览器地址栏中</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<p>然后打开Git Shell进入到F:\blog\blog路径，输入下面命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div><div class="line">hexo d</div></pre></td></tr></table></figure></p>
<p>命令执行成功之后，在浏览器中输入<a href="http://atomwh.github.io/" target="_blank" rel="external">http://atomwh.github.io/</a> ，即可看到我们之前本地预览的内容。</p>
<p>到这一步个人博客搭建完毕。</p>
<h3 id="4-博客文章写作"><a href="#4-博客文章写作" class="headerlink" title="4. 博客文章写作"></a>4. 博客文章写作</h3><p>博客搭建完毕之后，接下来就是文章内容的写作。Hexo采用命令行的形式创建文章。打开Git Shell进入路径F:\blog\blog<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure></p>
<p>Hexo有三种默认布局：post、page、draft，布局可以自定义，其位置与post相同。<br>post的位置是source/_posts  page的位置是source  draft的位置是source/_drafts<br>布局没有给出的话，默认的是post。</p>
<p>命令新建的文件格式为.md文件，使用Markdown语法书写。文章默认的永久链接格式为:year/:month/:day/:title/ ，生成的链接为<a href="https://atomwh.github.io/2017/04/20/hello-world/。" target="_blank" rel="external">https://atomwh.github.io/2017/04/20/hello-world/。</a><br>写作完成之后使用命令行进行文章内容的更新。打开Git Shell进入路径F:\blog\blog<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo clean #清除缓存，防止出现莫名其妙的问题</div><div class="line">hexo g #生成静态文件</div><div class="line">hexo s #进行本地预览</div><div class="line">hexo d #部署到GitHub Pages上</div></pre></td></tr></table></figure></p>
<p>再次在浏览器中打开<a href="http://atomwh.github.io/，" target="_blank" rel="external">http://atomwh.github.io/，</a> 可以看到新建的文章已经更新到博客上了。</p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>通过上面的步骤，我们成功地搭建出一个个人博客，不过搭博客不是目的，写出好的内容才是最重要的。希望上面的方法可以给各位小伙伴提供一个展示自己创作内容的平台~</p>
<blockquote>
<p>对上面的步骤如果有什么疑问的话，反映在下方进行留言~</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 教程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/04/20/hello-world/</url>
      <content type="html"><![CDATA[<blockquote>
<p>本页面为测试页面</p>
</blockquote>
<a id="more"></a>
<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
    
  
</search>
